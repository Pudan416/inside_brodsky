import random
import pickle
import os
from pathlib import Path
from games.base_game import BaseGame
from config.settings import settings

class OdysseusGame(BaseGame):
    """Игра 'Одиссей Телемаку' по мотивам стихотворения Бродского"""
    
    name = "Одиссей Телемаку"
    poem = "Одиссей Телемаку"
    description = "Путешествие между двумя судьбами: отца в море и сына на Итаке"
    
    def __init__(self, user_id: int):
        super().__init__(user_id)
        
        # Основные параметры игры
        self.character = "telemachos"  # 'odysseus' или 'telemachos'
        self.narrative_stage = 0       # Текущий этап повествования
        self.decisions = []            # История принятых решений
        self.wisdom_learned = 0        # Накопленная мудрость
        self.longing = 0               # Тоска по близкому
        self.odysseus_progress = 0     # Прогресс Одиссея в пути домой (0-100)
        self.telemachos_growth = 0     # Взросление Телемака (0-100)
        self.messages = []             # Сообщения, отправленные другому персонажу
        self.state = "normal"          # Состояние игры
        
        # Локации для Одиссея
        self.odysseus_locations = {
            "море": "Бескрайнее море, где волны говорят на неизвестном языке",
            "остров_кирки": "Остров Кирки, где время замедляется",
            "царство_аида": "Вход в царство мертвых, мир теней и прошлого",
            "остров_сирен": "Остров сирен, чьи песни обещают знание",
            "между_сциллой_и_харибдой": "Пролив между Сциллой и Харибдой, где нужно выбирать меньшее из зол",
            "остров_калипсо": "Остров нимфы Калипсо, где обещано бессмертие"
        }
        
        # Локации для Телемака
        self.telemachos_locations = {
            "дворец": "Дворец в Итаке, наполненный женихами Пенелопы",
            "берег": "Берег моря, откуда отец уплыл много лет назад",
            "оливковая_роща": "Оливковая роща, где отец учил тебя в детстве",
            "покои_матери": "Покои матери, где она ткет и распускает покрывало",
            "агора": "Площадь, где старейшины обсуждают судьбу Итаки"
        }
        
        # Текущие локации персонажей
        self.odysseus_current_location = "море"
        self.telemachos_current_location = "дворец"
        
        # Персонажи, с которыми можно взаимодействовать
        self.odysseus_npcs = {
            "море": ["посейдон", "старый_моряк"],
            "остров_кирки": ["кирка", "превращенные_в_свиней"],
            "царство_аида": ["тиресий", "антиклея"],
            "остров_сирен": ["сирены"],
            "между_сциллой_и_харибдой": ["сцилла", "харибда"],
            "остров_калипсо": ["калипсо", "гермес"]
        }
        
        self.telemachos_npcs = {
            "дворец": ["пенелопа", "евмей", "женихи"],
            "берег": ["рыбаки", "моряки"],
            "оливковая_роща": ["ментор", "старики"],
            "покои_матери": ["пенелопа", "служанки"],
            "агора": ["жители_итаки", "старейшины"]
        }
        
        # Предметы, которые можно найти
        self.odysseus_items = []
        self.telemachos_items = []
        
        # Основные цепочки диалогов
        self.dialog_stages = {
            "odysseus": [
                "Кораблекрушение и начало пути",
                "Испытания и преодоление",
                "Встреча с прошлым в царстве теней",
                "Искушение знанием и бессмертием",
                "Выбор пути домой, несмотря на цену",
                "Возвращение и неузнавание"
            ],
            "telemachos": [
                "Ожидание и тоска по неизвестному отцу",
                "Первые шаги к самостоятельности",
                "Поиск информации об отце",
                "Защита дома и матери",
                "Взросление и принятие ответственности",
                "Подготовка к встрече и узнаванию"
            ]
        }
        
    def get_help(self) -> str:
        """Получить справку по игре"""
        help_text = """
📜 Доступные команды:

Навигация:
- осмотреться - осмотреть текущую локацию
- локации - список доступных мест для перемещения
- идти [локация] - перейти в указанную локацию
- кто здесь - посмотреть, кто находится рядом

Действия:
- говорить [имя] - начать разговор с персонажем
- взять [предмет] - подобрать предмет
- использовать [предмет] - использовать предмет из инвентаря
- думать - размышлять о текущей ситуации
- предметы - просмотреть инвентарь

Коммуникация:
- отправить послание [текст] - отправить сообщение другому персонажу
- полученные послания - просмотреть полученные сообщения

Персонажи:
- стать одиссеем - переключиться на Одиссея
- стать телемаком - переключиться на Телемака
- статус - показать параметры текущего персонажа

🎮 Цель игры: исследовать путь Одиссея и взросление Телемака, чтобы привести обоих к воссоединению.
"""
        return help_text

    def get_intro(self) -> str:
        """Получить вступление к игре"""
        intro = """
╔=================╗
║::::::::::ОДИССЕЙ::::::::::║
║:::::::::ТЕЛЕМАКУ::::::::::║
║————————————║
║.....игра по мотивам....║
║::::::стихотворения::::::║
║::::::::::Бродского:::::::::║
║————————————║
║:::автор @pudan416::::║
╚=================╝

"Мой Телемак,
Троянская война
окончена. Кто победил – не помню.
Должно быть, греки: столько мертвецов
вне дома бросить могут только греки..."

Одиссей затерян в море, пытаясь вернуться домой после долгих лет войны.
Телемак ждет на Итаке, повзрослев без отца, охраняя дом от женихов.

В этой игре ты можешь стать как Одиссеем, так и Телемаком, исследуя их параллельные истории и двигаясь к воссоединению.

По умолчанию ты начинаешь игру за Телемака.
Введи 'осмотреться', чтобы изучить свое окружение, или 'помощь' для списка команд.
"""
        return intro
    
    def save_game_state(self) -> str:
        """Create a compact string representation of game state"""
        # Basic game state
        state_string = f"odysseus:{self.character}:{self.narrative_stage}:{self.wisdom_learned}:{self.longing}:{self.odysseus_progress}:{self.telemachos_growth}:{self.state}"
        
        # Locations
        state_string += f":{self.odysseus_current_location}:{self.telemachos_current_location}"
        
        # Items (just count them to save space)
        state_string += f":{len(self.odysseus_items)}:{len(self.telemachos_items)}"
        
        return state_string
    
    @classmethod
    def load_from_state_string(cls, user_id: int, state_string: str) -> 'OdysseusGame':
        """Recreate game state from compact string"""
        game = cls(user_id)
        
        if not state_string or not state_string.startswith("odysseus:"):
            return game
            
        parts = state_string.split(':')
        if len(parts) >= 8:
            game.character = parts[1]
            game.narrative_stage = int(parts[2])
            game.wisdom_learned = int(parts[3])
            game.longing = int(parts[4])
            game.odysseus_progress = int(parts[5])
            game.telemachos_growth = int(parts[6])
            game.state = parts[7]
            
            if len(parts) >= 10:
                game.odysseus_current_location = parts[8]
                game.telemachos_current_location = parts[9]
                
        return game
    
    

    def process_command(self, command: str) -> str:
        """Обработка команды игрока"""
        command = command.lower().strip()
        
        # Если игра завершена
        if self.state == "game_over":
            return "Игра завершена. Введи /start для начала новой игры."
        
        # Проверяем, не является ли команда сменой персонажа
        if command == "стать одиссеем" and self.character == "telemachos":
            self.character = "odysseus"
            return self.change_character_to_odysseus()
        elif command == "стать телемаком" and self.character == "odysseus":
            self.character = "telemachos"
            return self.change_character_to_telemachos()
        
        # Обработка команд навигации
        if command == "осмотреться":
            return self.look_around()
        elif command.startswith("идти"):
            parts = command.split(" ", 1)
            location = parts[1] if len(parts) > 1 else ""
            return self.go_to(location)
        elif command == "локации":
            return self.list_locations()
        elif command == "кто здесь":
            return self.list_people_around()
        elif command == "предметы":
            return self.list_items()
        
        # Обработка команд действий
        elif command.startswith("говорить"):
            parts = command.split(" ", 1)
            person = parts[1] if len(parts) > 1 else ""
            return self.talk_to(person)
        elif command.startswith("взять"):
            parts = command.split(" ", 1)
            item = parts[1] if len(parts) > 1 else ""
            return self.take_item(item)
        elif command.startswith("использовать"):
            parts = command.split(" ", 1)
            item = parts[1] if len(parts) > 1 else ""
            return self.use_item(item)
        elif command == "думать":
            return self.think()
        elif command.startswith("отправить послание"):
            parts = command.split(" ", 2)
            message = parts[2] if len(parts) > 2 else ""
            return self.send_message(message)
        elif command == "полученные послания":
            return self.view_messages()
        
        # Справка
        elif command == "помощь":
            return self.get_help()
        elif command == "статус":
            return self.show_status()
        else:
            return "Я не понимаю эту команду. Введи 'помощь' для списка доступных команд."
    
    def look_around(self) -> str:
        """Осмотреть текущую локацию"""
        if self.character == "odysseus":
            location_name = self.odysseus_current_location
            location_desc = self.odysseus_locations[location_name]
            
            description = f"\nТы — Одиссей, царь Итаки, находишься в локации: {location_name}.\n"
            description += f"{location_desc}\n\n"
            
            # Люди в локации
            npcs = self.odysseus_npcs.get(location_name, [])
            if npcs:
                description += "Рядом с тобой:\n"
                for npc in npcs:
                    description += f"- {npc.replace('_', ' ').capitalize()}\n"
            else:
                description += "Здесь никого нет.\n"
            
            # Предметы, доступные в локации
            description += "\nТы видишь вокруг:\n"
            if location_name == "море":
                description += "- обломки корабля\n"
                description += "- веревку\n"
            elif location_name == "остров_кирки":
                description += "- странные травы\n"
                description += "- кубок с вином\n"
            elif location_name == "царство_аида":
                description += "- тени умерших\n"
                description += "- чашу для жертвоприношений\n"
            elif location_name == "остров_сирен":
                description += "- воск для ушей\n"
                description += "- обрывки карт\n"
            elif location_name == "между_сциллой_и_харибдой":
                description += "- плавающие обломки кораблей\n"
                description += "- весло\n"
            elif location_name == "остров_калипсо":
                description += "- цветущие деревья\n"
                description += "- плотницкие инструменты\n"
            
            description += f"\nТоска по дому: {self.longing}/100\n"
            description += f"Накопленная мудрость: {self.wisdom_learned}/100\n"
            description += f"Прогресс пути домой: {self.odysseus_progress}/100\n"
        
        else:  # Телемак
            location_name = self.telemachos_current_location
            location_desc = self.telemachos_locations[location_name]
            
            description = f"\nТы — Телемак, сын Одиссея, находишься в локации: {location_name}.\n"
            description += f"{location_desc}\n\n"
            
            # Люди в локации
            npcs = self.telemachos_npcs.get(location_name, [])
            if npcs:
                description += "Рядом с тобой:\n"
                for npc in npcs:
                    description += f"- {npc.replace('_', ' ').capitalize()}\n"
            else:
                description += "Здесь никого нет.\n"
            
            # Предметы, доступные в локации
            description += "\nТы видишь вокруг:\n"
            if location_name == "дворец":
                description += "- отцовский лук\n"
                description += "- щит с изображением корабля\n"
            elif location_name == "берег":
                description += "- старую лодку\n"
                description += "- ракушки, принесенные волнами\n"
            elif location_name == "оливковая_роща":
                description += "- старое дерево с меткой\n"
                description += "- маленький нож, которым отец учил тебя вырезать\n"
            elif location_name == "покои_матери":
                description += "- ткацкий станок\n"
                description += "- шкатулку с памятными вещами\n"
            elif location_name == "агора":
                description += "- свитки с новостями из других земель\n"
                description += "- статую Афины\n"
            
            description += f"\nТоска по отцу: {self.longing}/100\n"
            description += f"Взросление: {self.telemachos_growth}/100\n"
            
            # Если Одиссей уже близок к возвращению
            if self.odysseus_progress > 80:
                description += "\nТебя не покидает ощущение, что скоро все изменится..."
            
        return description

    def list_locations(self) -> str:
        """Показать список доступных локаций"""
        result = "Доступные локации для перемещения:\n"
        
        if self.character == "odysseus":
            for loc_key, loc_desc in self.odysseus_locations.items():
                # Показываем только соседние локации или текущую
                if loc_key == self.odysseus_current_location:
                    result += f"- {loc_key.replace('_', ' ').capitalize()} (ты здесь)\n"
                elif self.is_location_available_for_odysseus(loc_key):
                    result += f"- {loc_key.replace('_', ' ').capitalize()}\n"
        else:
            for loc_key, loc_desc in self.telemachos_locations.items():
                if loc_key == self.telemachos_current_location:
                    result += f"- {loc_key.replace('_', ' ').capitalize()} (ты здесь)\n"
                else:
                    result += f"- {loc_key.replace('_', ' ').capitalize()}\n"
        
        result += "\nЧтобы переместиться, введи 'идти [название локации]'."
        return result
    
    def is_location_available_for_odysseus(self, location: str) -> bool:
        """Проверка доступности локации для Одиссея на основе прогресса"""
        current_location = self.odysseus_current_location
        
        # Морская последовательность локаций
        sea_route = [
            "море", 
            "остров_кирки", 
            "царство_аида", 
            "остров_сирен", 
            "между_сциллой_и_харибдой", 
            "остров_калипсо"
        ]
        
        # Находим индексы текущей и запрашиваемой локаций
        try:
            current_index = sea_route.index(current_location)
            target_index = sea_route.index(location)
            
            # Можно перемещаться только на 1 шаг вперед или назад по маршруту
            return abs(current_index - target_index) <= 1
        except ValueError:
            return False
    
    def go_to(self, location: str) -> str:
        """Переместиться в указанную локацию"""
        # Нормализуем название локации
        location = location.lower().replace(" ", "_")
        
        if self.character == "odysseus":
            # Проверяем, существует ли локация
            if location not in self.odysseus_locations:
                return f"Локация '{location.replace('_', ' ')}' не существует. Введи 'локации' для списка доступных мест."
            
            # Проверяем доступность локации
            if not self.is_location_available_for_odysseus(location):
                return "Эта локация сейчас недоступна. Ты можешь перемещаться только на один шаг вперед или назад по своему пути."
            
            # Если всё в порядке, перемещаемся
            self.odysseus_current_location = location
            
            # Увеличиваем прогресс, если движемся вперед
            sea_route = [
                "море", 
                "остров_кирки", 
                "царство_аида", 
                "остров_сирен", 
                "между_сциллой_и_харибдой", 
                "остров_калипсо"
            ]
            progress_increment = (100 / (len(sea_route) - 1)) * 0.5  # Половина прогресса за перемещение
            self.odysseus_progress = min(100, (sea_route.index(location) / (len(sea_route) - 1)) * 100)
            
            # Случайное событие при перемещении
            events = [
                "Ветер наполняет паруса, унося тебя всё дальше от дома, который становится всё роднее в памяти.",
                "Волны бьются о борт, напоминая о непостоянстве моря и жизни.",
                "В шуме прибоя тебе слышится голос Пенелопы, зовущей тебя домой.",
                "Звезды складываются в узоры, которые помогают определить путь.",
                "Ты вспоминаешь Телемака, каким он был в детстве, и думаешь, каким он стал теперь."
            ]
            
            return f"Ты прибыл в локацию: {location.replace('_', ' ')}.\n\n{random.choice(events)}\n\nВведи 'осмотреться', чтобы изучить окружение."
        
        else:  # Телемак
            # Проверяем, существует ли локация
            if location not in self.telemachos_locations:
                return f"Локация '{location.replace('_', ' ')}' не существует. Введи 'локации' для списка доступных мест."
            
            # Для Телемака все локации доступны сразу
            self.telemachos_current_location = location
            
            # Увеличиваем показатель взросления при активном исследовании
            self.telemachos_growth = min(100, self.telemachos_growth + 2)
            
            # Случайное событие при перемещении
            events = [
                "По пути ты слышишь, как люди говорят об Одиссее, вспоминая его подвиги.",
                "Тебе кажется, что в толпе мелькнул силуэт, напоминающий того, кого ты никогда не видел, но всегда узнаешь.",
                "Старик смотрит на тебя и кивает: 'Всё больше похож на отца.'",
                "Ветер с моря приносит запах соли и странное чувство ожидания.",
                "Взгляд падает на горизонт, где сливаются небо и море, и ты задаешься вопросом, где сейчас отец."
            ]
            
            return f"Ты пришел в локацию: {location.replace('_', ' ')}.\n\n{random.choice(events)}\n\nВведи 'осмотреться', чтобы изучить окружение."
    
    def list_people_around(self) -> str:
        """Показать список людей в текущей локации"""
        if self.character == "odysseus":
            location = self.odysseus_current_location
            npcs = self.odysseus_npcs.get(location, [])
        else:
            location = self.telemachos_current_location
            npcs = self.telemachos_npcs.get(location, [])
        
        if not npcs:
            return "Здесь никого нет."
        
        result = "Рядом с тобой находятся:\n"
        for npc in npcs:
            result += f"- {npc.replace('_', ' ').capitalize()}\n"
        
        result += "\nЧтобы поговорить, введи 'говорить [имя]'."
        return result
    
    def list_items(self) -> str:
        """Показать список предметов у игрока"""
        items = self.odysseus_items if self.character == "odysseus" else self.telemachos_items
        
        if not items:
            return "У тебя нет предметов."
        
        result = "Твои предметы:\n"
        for item in items:
            result += f"- {item}\n"
        
        result += "\nЧтобы использовать предмет, введи 'использовать [название предмета]'."
        return result
    
    def talk_to(self, person: str) -> str:
        """Поговорить с персонажем"""
        person = person.lower().replace(" ", "_")
        
        if self.character == "odysseus":
            location = self.odysseus_current_location
            npcs = self.odysseus_npcs.get(location, [])
            
            if person not in npcs:
                return f"Здесь нет никого с именем '{person.replace('_', ' ')}'."
            
            # Диалоги с персонажами для Одиссея
            if location == "море":
                if person == "посейдон":
                    self.wisdom_learned += 5
                    self.longing += 10
                    return """
Волны поднимаются выше, образуя подобие лица из пены.

Посейдон: "Ты, осмелившийся ослепить моего сына Полифема, познаешь долгую разлуку с домом. Я не уничтожу тебя, но испытаю твое терпение и мудрость."

Из этого трудного момента ты извлек мудрость: не хвастаться своими деяниями перед богами. Тоска по дому усилилась.
"""
                elif person == "старый_моряк":
                    self.wisdom_learned += 8
                    return """
Старый моряк смотрит на тебя взглядом, полным сострадания и понимания.

Старый моряк: "Много морей я пересек, много штормов пережил. Знаешь, царь, сила не в том, чтобы бороться с морем, а в том, чтобы плыть туда, куда оно позволяет, выжидая момент для своего курса."

Ты получил совет, который поможет в странствиях: иногда нужно уступить, чтобы в конце концов победить.
"""
            
            elif location == "остров_кирки":
                if person == "кирка":
                    self.wisdom_learned += 7
                    self.longing += 5
                    return """
Кирка смотрит на тебя глазами, в которых отражается мудрость веков.

Кирка: "Чтобы вернуться домой, ты должен сначала спуститься в царство мертвых и поговорить с прорицателем Тиресием. Только он может указать тебе путь. Но помни, между знанием и домом лежит пропасть потери."

Ты понимаешь, что путь домой будет еще долгим, и это усиливает твою тоску.
"""
                elif person == "превращенные_в_свиней":
                    self.wisdom_learned += 3
                    return """
Твои спутники, превращенные в свиней, узнают тебя. В их глазах ты видишь отражение человеческого сознания, запертого в животном теле.

Ты обдумываешь природу человека: сколько в нас животного и сколько божественного, и что значит быть человеком в мире богов и чудовищ.
"""
            
            elif location == "царство_аида":
                if person == "тиресий":
                    self.wisdom_learned += 10
                    self.longing += 15
                    self.odysseus_progress += 10
                    return """
Тень Тиресия поднимается из туманной глубины, глаза провидца излучают неземной свет.

Тиресий: "Путь домой возможен, но тернист. Ты вернешься на Итаку один, потеряв всех спутников. Не трогай скот Гелиоса. Берегись Сцилл и Харибд жизни. В доме найдешь бедствие — женихов, пожирающих твое достояние. Но прежде чем мстить, ты должен быть никем, чтобы стать собой."

Эти пророчества одновременно дают надежду и тревожат душу. Ты продвинулся в понимании своего пути.
"""
                elif person == "антиклея":
                    self.longing += 20
                    self.wisdom_learned += 8
                    return """
Тень твоей матери приближается, её взгляд полон любви и печали.

Антиклея: "Сын мой, я умерла от тоски по тебе. Твой отец живет отшельником, скорбя. Телемак и Пенелопа ждут, окруженные врагами. Не мешкай, но и не торопись — каждый шаг на пути домой должен быть верным."

Слова матери о семье, которую ты не видел так долго, наполняют сердце невыносимой тоской. Но в этой тоске есть и мудрость понимания жертвы.
"""
            
            elif location == "остров_сирен":
                if person == "сирены":
                    self.wisdom_learned += 15
                    return """
Голоса сирен доносятся до тебя, несмотря на воск в ушах команды. Они обещают знание всего, что было и будет.

Сирены: "Мы знаем все страдания, что ахейцы и трояне испытали волею богов. Знаем все, что случится на земле. Подойди, узнай свою судьбу и судьбу мира..."

Привязанный к мачте, ты слышишь обещание знания, но выбираешь незнание и жизнь. В этом парадоксе ты находишь глубокую мудрость: иногда отказ от знания мудрее, чем его получение.
"""
            
            elif location == "между_сциллой_и_харибдой":
                if person == "сцилла":
                    self.longing += 5
                    self.wisdom_learned += 6
                    return """
Многоголовое чудовище нависает с утеса, готовое схватить любого, кто подойдет слишком близко.

Проходя мимо Сциллы, ты принимаешь тяжелое решение: пожертвовать частью команды, чтобы спасти корабль. Это приносит тебе горькую мудрость о природе выбора в невыносимых ситуациях.
"""
                elif person == "харибда":
                    self.wisdom_learned += 6
                    return """
Водоворот Харибды поглощает и извергает море трижды в день. Его рев наполняет воздух.

Наблюдая за ритмом Харибды, ты понимаешь важную истину: даже самые страшные опасности имеют свой ритм и паттерн. Терпение и наблюдательность могут помочь найти путь там, где его, казалось бы, нет.
"""
            
            elif location == "остров_калипсо":
                if person == "калипсо":
                    self.longing += 10
                    self.wisdom_learned += 5
                    return """
Прекрасная нимфа Калипсо смотрит на тебя с нежностью и затаенной грустью.

Калипсо: "Я предлагаю тебе вечную жизнь и вечную молодость рядом со мной. Отчего ты так стремишься к смертной жене, которая увянет, в то время как я буду вечно молода?"

Ты отвечаешь: "Всё, что я знаю — я хочу домой. Даже если Пенелопа не так прекрасна, как ты, она смертна, как и я. В этом наше равенство и наша судьба."

В этом выборе между бессмертием и домом ты находишь понимание глубинной сути человеческого существования.
"""
                elif person == "гермес":
                    self.odysseus_progress += 15
                    self.wisdom_learned += 7
                    return """
Гермес, посланник богов, неожиданно появляется перед тобой.

Гермес: "Зевс посылает тебе весть: Калипсо должна отпустить тебя. Построй плот и отправляйся в путь. Однако последнее испытание ждет тебя — прибыв на Итаку, ты должен вернуть не только дом, но и себя."

Ты получаешь божественную поддержку и понимаешь, что конец путешествия близок, но самое сложное испытание еще впереди.
"""
        
        else:  # Диалоги Телемака
            location = self.telemachos_current_location
            npcs = self.telemachos_npcs.get(location, [])
            
            if person not in npcs:
                return f"Здесь нет никого с именем '{person.replace('_', ' ')}'."
            
            # Диалоги с персонажами для Телемака
            if location == "дворец":
                if person == "пенелопа":
                    self.longing += 8
                    self.telemachos_growth += 5
                    return """
Твоя мать Пенелопа выглядит уставшей, но в её глазах ты видишь непоколебимую верность.

Пенелопа: "Женихи становятся всё настойчивее. Они говорят, что твой отец мертв, и я должна выбрать нового мужа. Но я верю, что он жив. Мое сердце подсказывает мне это."

Ты обнимаешь мать, и это прикосновение напоминает о том, какая ответственность лежит на тебе — сыне царя, который должен защитить дом.
"""
                elif person == "евмей":
                    self.telemachos_growth += 7
                    return """
Старый свинопас Евмей, самый верный из слуг вашего дома, подходит к тебе.

Евмей: "Молодой господин, помню, как твой отец держал тебя на руках и говорил, что ты продолжишь его род. Сейчас ты выглядишь всё больше похожим на него. Возможно, пришло время действовать, как поступил бы он."

Эти слова заставляют тебя задуматься о своем наследии и о том, что значит быть сыном героя.
"""
                elif person == "женихи":
                    self.telemachos_growth += 8
                    return """
Женихи насмехаются над тобой, когда ты проходишь мимо.

Антиной: "Посмотрите, сын Одиссея думает, что он хозяин дома! Твой отец мертв, мальчик. Пора твоей матери выбрать нового мужа, а тебе — принять новую реальность."

Ты сдерживаешь гнев, понимая, что время для открытого противостояния еще не пришло. Это испытание твоего терпения и мудрости, и ты чувствуешь, как с каждым днем растешь внутренне.
"""
            
            elif location == "берег":
                if person == "рыбаки":
                    self.longing += 5
                    self.telemachos_growth += 3
                    return """
Рыбаки чинят сети, время от времени поглядывая на горизонт.

Старый рыбак: "Мой отец рассказывал, что твой отец был не только великим воином, но и мудрым правителем. Он понимал море и уважал тех, кто живет им. Многие говорят, что он не вернется, но море хранит свои тайны."

Эти слова дают тебе новую грань понимания отца — не только как героя, но и как человека, уважавшего простой народ.
"""
                elif person == "моряки":
                    self.longing += 5
                    self.telemachos_growth += 6
                    return """
Группа моряков, недавно прибывших из дальних земель, делится новостями.

Моряк: "В Пилосе говорят, что видели корабль, похожий на корабль Одиссея, но это было давно. В Спарте ходят слухи о человеке, который выжил после встречи с киклопом. Истории разные, но они дают надежду."

Ты впитываешь каждую историю, каждый слух, пытаясь составить карту возможного пути отца.
"""
            
            elif location == "оливковая_роща":
                if person == "ментор":
                    self.telemachos_growth += 10
                    return """
Ментор, старый друг твоего отца и твой наставник, присаживается рядом с тобой под оливковым деревом.

Ментор: "Телемак, время детства прошло. Пора стать мужчиной и принять решение. Возможно, тебе стоит отправиться на поиски вестей об отце. Пилос и Спарта — места, где тебя могут выслушать."

Его слова звучат как вызов и как благословение одновременно. Ты чувствуешь, что пришло время действий, а не только ожидания.
"""
                elif person == "старики":
                    self.telemachos_growth += 5
                    return """
Старейшины Итаки собираются в тени оливковых деревьев, обсуждая дела острова.

Один из них замечает тебя: "Сын Одиссея, мы помним, как твой отец сажал эти деревья. Он говорил, что может не увидеть их плодов, но его сын обязательно соберет урожай. Может быть, пришло твое время?"

Эти слова напоминают о цикличности жизни и о том, что наследие отца живет в тебе и твоих действиях.
"""
            
            elif location == "покои_матери":
                if person == "пенелопа":
                    self.longing += 10
                    self.telemachos_growth += 7
                    return """
Твоя мать сидит у окна, глядя на море. Когда ты входишь, она оборачивается, и ты замечаешь слезы в её глазах.

Пенелопа: "Каждую ночь я распускаю то, что соткала днем, обещая женихам выбрать мужа, когда закончу покрывало. Но знаешь, в этом есть нечто большее, чем просто обман. Это надежда — нить, связывающая прошлое и будущее."

Ты понимаешь глубину её верности и то, как терпение может быть формой борьбы.
"""
                elif person == "служанки":
                    self.telemachos_growth += 4
                    return """
Служанки шепчутся, когда ты проходишь мимо, но некоторые из них — те, кто сохранил верность дому — подходят к тебе.

Старая служанка: "Молодой господин, не все в этом доме предатели. Многие из нас помнят доброту твоего отца и верят в его возвращение. Будь осторожен с теми, кто слишком предан женихам."

Это напоминание о том, что в борьбе нужно различать друзей и врагов, учит тебя внимательнее относиться к людям и их мотивам.
"""
            
            elif location == "агора":
                if person == "жители_итаки":
                    self.telemachos_growth += 6
                    return """
Обычные жители Итаки собираются на площади, чтобы обменяться новостями и товарами.

Когда ты появляешься, люди начинают приветствовать тебя, некоторые с уважением, некоторые с любопытством.

Пожилая женщина: "Ты так похож на своего отца, когда он был молод. У него был такой же взгляд — внимательный, изучающий мир."

Эти слова трогают тебя, создавая невидимую связь с человеком, которого ты знаешь только по рассказам других.
"""
                elif person == "старейшины":
                    self.telemachos_growth += 8
                    return """
Совет старейшин Итаки обсуждает проблемы острова. Когда ты приближаешься, они замолкают.

Один из них обращается к тебе: "Сын Одиссея, мы видим, что ты взрослеешь и становишься достойным преемником своего отца. Но дом твой в опасности, и царство нуждается в правителе. Какое решение ты примешь?"

Это прямой вызов твоей зрелости и готовности принять бремя власти. Ты чувствуешь, как детство окончательно остается позади.
"""
        
        return "Разговор закончен."
    
    def take_item(self, item: str) -> str:
        """Подобрать предмет"""
        item = item.lower()
        
        if self.character == "odysseus":
            location = self.odysseus_current_location
            
            # Предметы доступные в каждой локации
            available_items = {
                "море": ["обломки корабля", "веревка"],
                "остров_кирки": ["странные травы", "кубок с вином"],
                "царство_аида": ["тени умерших", "чаша для жертвоприношений"],
                "остров_сирен": ["воск для ушей", "обрывки карт"],
                "между_сциллой_и_харибдой": ["плавающие обломки кораблей", "весло"],
                "остров_калипсо": ["цветущие деревья", "плотницкие инструменты"]
            }
            
            if item not in available_items.get(location, []):
                return f"Здесь нет предмета '{item}'."
            
            if item in self.odysseus_items:
                return f"У тебя уже есть '{item}'."
            
            self.odysseus_items.append(item)
            return f"Ты взял: {item}."
        
        else:  # Телемак
            location = self.telemachos_current_location
            
            # Предметы доступные в каждой локации
            available_items = {
                "дворец": ["отцовский лук", "щит с изображением корабля"],
                "берег": ["старая лодка", "ракушки, принесенные волнами"],
                "оливковая_роща": ["старое дерево с меткой", "маленький нож"],
                "покои_матери": ["ткацкий станок", "шкатулка с памятными вещами"],
                "агора": ["свитки с новостями", "статуя афины"]
            }
            
            if item not in available_items.get(location, []):
                return f"Здесь нет предмета '{item}'."
            
            if item in self.telemachos_items:
                return f"У тебя уже есть '{item}'."
            
            self.telemachos_items.append(item)
            return f"Ты взял: {item}."
    
    def use_item(self, item: str) -> str:
        """Использовать предмет"""
        item = item.lower()
        
        if self.character == "odysseus":
            if item not in self.odysseus_items:
                return f"У тебя нет предмета '{item}'."
            
            # Эффекты от использования предметов Одиссеем
            if item == "обломки корабля":
                self.wisdom_learned += 5
                return "Ты изучаешь обломки корабля, вспоминая путь, который привел тебя сюда, и думая о пути, который еще предстоит. Это напоминание о хрупкости человеческих творений перед лицом стихии."
            
            elif item == "веревка":
                self.odysseus_progress += 5
                return "Ты используешь веревку, чтобы закрепить части плота. Каждый узел — шаг к возвращению домой."
            
            elif item == "странные травы":
                self.wisdom_learned += 8
                return "Изучая травы Кирки, ты понимаешь, как тонка грань между ядом и лекарством, между тем, что превращает в животное, и тем, что возвращает человеческий облик."
            
            elif item == "кубок с вином":
                self.wisdom_learned += 3
                return "Ты осторожно пробуешь вино, помня о коварстве Кирки. В его вкусе ты различаешь ноты забвения и воспоминаний — выбор между тем, что помнить, и тем, что забыть."
            
            elif item == "чаша для жертвоприношений":
                self.wisdom_learned += 10
                self.longing += 10
                return "Ты совершаешь возлияние тенями мертвых, и они рассказывают тебе о доме, о судьбах тех, кто ушел, пока ты странствовал. Эти истории наполняют тебя мудростью и тоской."
            
            elif item == "воск для ушей":
                self.odysseus_progress += 8
                return "Ты раздаешь воск команде, чтобы они не слышали пения сирен. Себя же ты приказываешь привязать к мачте — чтобы слышать, но не поддаться искушению. В этом решении — мудрость понимания собственных слабостей."
            
            elif item == "обрывки карт":
                self.odysseus_progress += 10
                return "Изучая карты, ты находишь путь между Сциллой и Харибдой. Это не идеальный путь, но в мире, полном чудовищ, совершенных решений не бывает."
            
            elif item == "весло":
                self.wisdom_learned += 7
                return "Весло в твоих руках — и инструмент, и оружие, и посох странника. Ты вспоминаешь пророчество Тиресия о человеке, который примет весло за веялку, и о последнем путешествии, которое тебе предстоит."
            
            elif item == "плотницкие инструменты":
                self.odysseus_progress += 15
                return "Ты строишь плот, каждый удар топора приближает тебя к дому. В этой простой работе — освобождение от чар Калипсо и возвращение к своей судьбе."
            
            else:
                return f"Ты не знаешь, как использовать '{item}'."
        
        else:  # Телемак
            if item not in self.telemachos_items:
                return f"У тебя нет предмета '{item}'."
            
            # Эффекты от использования предметов Телемаком
            if item == "отцовский лук":
                self.telemachos_growth += 10
                return "Ты пытаешься натянуть лук отца, но он поддается лишь немного. Тем не менее, ты чувствуешь, как с каждой попыткой становишься сильнее — не только телом, но и духом."
            
            elif item == "щит с изображением корабля":
                self.telemachos_growth += 7
                return "Ты рассматриваешь изображение на щите — корабль в бурном море. Это напоминает тебе о том, что твой отец всегда находил путь через шторм, и ты тоже найдешь свой."
            
            elif item == "старая лодка":
                self.telemachos_growth += 12
                return "Ты решаешь восстановить лодку — это будет твой корабль для поисков вестей об отце. Работая над ней, ты чувствуешь, как каждый гвоздь, каждая доска приближают тебя к самостоятельности."
            
            elif item == "ракушки, принесенные волнами":
                self.longing += 8
                return "Ты собираешь ракушки, думая о том, что они могли путешествовать по тем же морям, что и твой отец. В их шуме ты слышишь отголоски дальних берегов и неизведанных путей."
            
            elif item == "маленький нож":
                self.telemachos_growth += 5
                return "Ты вырезаешь на дереве свое имя рядом с меткой, оставленной отцом. Это символический акт — продолжение линии, связь между прошлым и будущим."
            
            elif item == "шкатулка с памятными вещами":
                self.longing += 15
                self.telemachos_growth += 8
                return "В шкатулке ты находишь детские игрушки, которые сделал для тебя отец, прядь его волос, сохраненную матерью, и другие сокровища памяти. Они усиливают твою тоску, но и придают решимости."
            
            elif item == "свитки с новостями":
                self.telemachos_growth += 9
                return "Читая свитки, ты узнаешь о событиях в мире за пределами Итаки. Среди рассказов о войнах и союзах ты ищешь любое упоминание об Одиссее, любую нить, ведущую к отцу."
            
            else:
                return f"Ты не знаешь, как использовать '{item}'."
    
    def think(self) -> str:
        """Размышлять о жизни и судьбе"""
        if self.character == "odysseus":
            self.wisdom_learned += 3
            
            thoughts = [
                "Ты смотришь на звезды, по которым направляешь корабль, и думаешь о звездах над Итакой. Видит ли их сейчас Пенелопа? Узнает ли Телемак отца, которого не видел столько лет?",
                
                "Что значит вернуться домой? Если дом изменился и ты изменился, останется ли он домом? В этих мыслях — суть твоего путешествия.",
                
                "Ты вспоминаешь слова, сказанные тобой Пенелопе перед отплытием: 'Жди меня, но не всю жизнь'. Тогда они казались мудрыми. Теперь ты не уверен.",
                
                "Может ли человек противостоять судьбе? Или все твои решения, все повороты пути были предначертаны богами? В этом парадоксе — твоя свобода и твоя тюрьма.",
                
                "Одиссей — имя, ставшее легендой еще при жизни. Но кто ты без этого имени? Просто человек, стремящийся домой. В этой простоте — истина."
            ]
            
            return random.choice(thoughts)
        
        else:  # Телемак
            self.telemachos_growth += 3
            
            thoughts = [
                "Как узнать человека, которого никогда не видел? Если отец вернется, как ты поймешь, что это он? По крови, по историям, по чувству родства, которое сильнее времени?",
                
                "Что значит быть сыном героя? Продолжать его путь или создавать свой собственный? В этом вопросе — твое взросление.",
                
                "Ты смотришь на руки матери, мозолистые от ткацкого станка, и думаешь о терпении как форме героизма. Есть подвиги в тишине, не воспетые бардами.",
                
                "Может ли остров существовать без своего царя? Может ли сын существовать без отца? В твоем случае ответы должны быть 'да', и в этом — испытание.",
                
                "Ты слышал истории об Одиссее всю жизнь, но насколько они правдивы? И если отец вернется, выдержит ли легенда встречу с реальностью?"
            ]
            
            return random.choice(thoughts)
    
    def send_message(self, message: str) -> str:
        """Отправить послание другому персонажу"""
        if not message:
            return "Что ты хочешь передать?"
        
        # Отправляем сообщение от текущего персонажа другому
        sender = "Одиссей" if self.character == "odysseus" else "Телемак"
        receiver = "Телемак" if self.character == "odysseus" else "Одиссей"
        
        self.messages.append({
            "from": sender,
            "to": receiver,
            "text": message
        })
        
        return f"Ты отправил послание {receiver}у: '{message}'"
    
    def view_messages(self) -> str:
        """Посмотреть полученные послания"""
        receiver = "Одиссей" if self.character == "odysseus" else "Телемак"
        
        # Фильтруем сообщения, адресованные текущему персонажу
        received_messages = [m for m in self.messages if m["to"] == receiver]
        
        if not received_messages:
            return f"У тебя нет посланий."
        
        result = f"Твои послания:\n"
        for i, msg in enumerate(received_messages, 1):
            result += f"{i}. От {msg['from']}: '{msg['text']}'\n"
        
        return result
    
    def change_character_to_odysseus(self) -> str:
        """Переключиться на Одиссея"""
        # Обновляем прогресс, если Телемак приобрел мудрость или опыт
        if self.telemachos_growth > 50 and self.odysseus_progress < 70:
            self.odysseus_progress += 5
        
        return """
Ты становишься Одиссеем, царем Итаки, странником, пытающимся вернуться домой.
Твой путь долог и полон опасностей, но каждое испытание приближает тебя к дому.

Введи 'осмотреться', чтобы увидеть, где ты находишься, или 'помощь' для списка команд.
"""
    
    def change_character_to_telemachos(self) -> str:
        """Переключиться на Телемака"""
        # Обновляем рост Телемака, если Одиссей продвинулся в пути домой
        if self.odysseus_progress > 50 and self.telemachos_growth < 70:
            self.telemachos_growth += 5
        
        return """
Ты становишься Телемаком, сыном Одиссея, молодым человеком, выросшим без отца.
Твоя задача — защитить дом и найти свой собственный путь в тени легендарного отца.

Введи 'осмотреться', чтобы увидеть, где ты находишься, или 'помощь' для списка команд.
"""
    
    def show_status(self) -> str:
        """Показать текущий статус персонажа"""
        if self.character == "odysseus":
            status = f"""
Статус Одиссея:
- Текущая локация: {self.odysseus_current_location.replace('_', ' ')}
- Прогресс возвращения: {self.odysseus_progress}/100
- Накопленная мудрость: {self.wisdom_learned}/100
- Тоска по дому: {self.longing}/100
- Предметы: {', '.join(self.odysseus_items) if self.odysseus_items else 'нет'}

Чтобы сменить персонажа, введи 'стать телемаком'
"""
        else:
            status = f"""
Статус Телемака:
- Текущая локация: {self.telemachos_current_location.replace('_', ' ')}
- Взросление: {self.telemachos_growth}/100
- Тоска по отцу: {self.longing}/100
- Предметы: {', '.join(self.telemachos_items) if self.telemachos_items else 'нет'}

Чтобы сменить персонажа, введи 'стать одиссеем'
"""
        
        # Проверяем условия для воссоединения
        if self.odysseus_progress >= 90 and self.telemachos_growth >= 90:
            status += "\nТы чувствуешь, что воссоединение отца и сына близко..."
        
        return status
    
    def check_special_ending(self) -> bool:
        """Проверить условие для особой концовки"""
        # Если Одиссей достиг Итаки и Телемак достаточно вырос
        if self.odysseus_progress >= 100 and self.telemachos_growth >= 100:
            self.state = "game_over"
            return True
        return False
    
    def check_time_ending(self) -> bool:
        """Проверить условие для концовки по времени"""
        # Концовка не зависит от времени в этой игре
        return False
    
    def get_special_ending(self) -> str:
        """Получить текст особой концовки"""
        return """
╔════════════════════════════════════════════════════════════╗
║                   ВОССОЕДИНЕНИЕ                            ║
╚════════════════════════════════════════════════════════════╝

Одиссей, преодолев все испытания, возвращается на Итаку неузнанным, 
в обличье нищего. Телемак, выросший и возмужавший, оказывается рядом с ним.

В хижине свинопаса Евмея отец открывается сыну.

Одиссей: "Телемак, сын мой. Это я, твой отец."

Телемак смотрит в глаза старика и видит в них огонь, который не смогли погасить ни годы, ни испытания.

Телемак: "Отец! Боги вернули тебя!"

Они обнимаются — два странника, нашедшие друг друга после долгой разлуки. В этом объятии — завершение одной истории и начало другой.

Вместе они составляют план освобождения дворца от женихов. Их союз — не просто восстановление порядка, но символ преемственности и обновления.

Когда Одиссей и Телемак, отец и сын, стоят плечом к плечу, защищая свой дом, они воплощают истину, которую оба познали в своих странствиях: родство — это не только кровь, но и выбор, не только наследие, но и узнавание душ.

ПОЗДРАВЛЯЕМ!
Ты прошел путь Одиссея и Телемака и соединил две части одной истории.

Введи /start, чтобы начать новую игру.
"""